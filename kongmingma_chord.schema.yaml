# Rime schema
# encoding: utf-8

### ### ### ###

反查词典: &reverse_lookup_dict flypy_light
反查词典所挂方案: &reverse_lookup_schema flypy_light

### ### ### ###


schema:
  schema_id: kongmingma_chord
  name: 空明码并击
#  icon: icons/kongmingma.ico
#  version: 2023/07/28
#  version: 2024/01/16
#  version: 2024/01/18
#  version: 2024/01/23
  version: 2024/01/25
  author:
    - 曌（空明码方案设计维护者）
    - zhanghaozhecn (Rime方案配置初始编写)
    - 叫我最右君（Rime方案改进维护）
  description: |
    空明码，是专为并击设计的编码方案，大词库(38万)，码长短(平均0.8)，8万高频词重码少(0.09%)。
  dependencies:
    - kongmingma_phony_part_user
    - kongmingma_phony_part00
    - kongmingma_phony_part01_char
    - kongmingma_phony_part01_ii
    - kongmingma_phony_part01_symbols
    - kongmingma_phony_part02
    - kongmingma_phony_part03
    - kongmingma_phony_part04
    - kongmingma_phony_part06
    - kongmingma_phony_part99
    - *reverse_lookup_schema

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中, 英 ]
  - name: force_select_mode
    reset: 1
    states: [ 默认无重上屏, 强制四码上屏 ]
#  - states: [ 关, 开 ]
#    reset: 0
#    name: soft_cursor

engine:
  processors_test:
#  processors:
    - ascii_composer
    - recognizer
#    - lua_processor@*key_event_inspector@before_chord_inspector
    - lua_processor@*chord_composer
    - speller
    - express_editor
#    - lua_processor@*key_event_inspector2@after_inspector
#  processors_bak:
  processors:
    - lua_processor@*disable_soft_cursor
#    - lua_processor@set_soft_cursor
    - ascii_composer
#    - lua_processor@*schema_switcher
#    - lua_processor@*redispatcher
#  redispatched_processors:
    - recognizer
#    - lua_processor@*key_event_inspector@before_chord_inspector
#    - lua_processor@*key_event_inspector2@after_inspector
#    - ks_processor@lua_processor@*chord_composer
#    - lua_processor@*chord_composer_old
#    - lua_processor@*chord_composer
    - chord_composer
    - key_binder
    - speller
#    - lua_processor@wrap_speller
#    - lua_processor@*key_event_inspector@before_selector
    - selector
    - navigator
    - express_editor
#    - lua_processor@*key_event_inspector2@after_inspector
#    - lua_processor@*commit_recorder
  segmentors:
    - matcher
    - abc_segmentor
    - affix_segmentor@tmp_schema_mode
    - affix_segmentor@tmp_en_mode
  translators:
#    - lua_translator@*txtdict_translator
    - lua_translator@*main_translator
    - table_translator@tmp_schema_mode
    - table_translator@tmp_en_mode
  filters:
#    - lua_filter@*cand_escape_filter
    - lua_filter@*force_select
    - lua_filter@reverse_lookup_filter_when_tmp_schema_mode
    - lua_filter@char_first_cands_sort_filter
    - lua_filter@ensure_uniquifier
    - lua_filter@insert_repeat_cand_when_tmp_schema_mode
    

menu:
  alternative_select_labels: ["壹", " 二", " 三", " 四", " 五", " 六", " 七", " 八", " 九", " 十"]
  page_size: 5




speller:
#############################
  # 无后续编码自动上屏，需配合enable_completion
  auto_select: true
#  auto_select: false
#################################
  # 要处理成输入码的按键
  alphabet: QWERTYUIOPASDFGHJKL:ZXCVBNM<>?qwertyuiopasdfghjkl;zxcvbnm,./1234567890%~@*&_"
#  algebra:


recognizer:
  patterns:
    dbl_slash_pattern: "^(//).*$"
    dbl_semicolon_pattern: "^(;;).*$"
    ii_pattern: "^(ii).*$"


tmp_en_mode:
  tag: dbl_slash_pattern
  extra_tags:
    - tmp_en_mode
  prefix: "//"
  tips: 〔 英文 〕
  ####
  dictionary: ""
  enable_user_dict: false


tmp_schema_mode:
  tag: dbl_semicolon_pattern
  extra_tags:
    - tmp_schema_mode
  prefix: ";;"
  tips: 〔 反查方案 〕
  ####
  dictionary: *reverse_lookup_dict
  enable_sentence: false
  enable_encoder: false
  enable_user_dict: false





reverse_lookup_filter_when_tmp_schema_mode:
  tags: [ tmp_schema_mode ]
  dicts_to_reverse_lookup:
    - kongmingma_part_user
    - kongmingma_part00
    - kongmingma_part01_char
    - kongmingma_part01_ii
    - kongmingma_part01_symbols
    - kongmingma_part02
    - kongmingma_part03
    - kongmingma_part04
    - kongmingma_part06
    - kongmingma_part99

insert_repeat_cand_when_tmp_schema_mode:
  tags: [ tmp_schema_mode ]




#schema_switcher:
#  target_schema: flypy_custom
#  trigger_keys: Shift+Control+Release+exclam # Ctrl+Shift+1

#before_chord_inspector:
#  log_level: info



# 拆分词典和翻译器

kongmingma_part_user:
  dictionary: kongmingma_part_user
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false
  initial_quality: 99

kongmingma_part00:
  dictionary: kongmingma_part00
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part01_char:
  dictionary: kongmingma_part01_char
  enable_sentence: false
  enable_encoder: false
  enable_user_dict: false
#  enable_sentence: true
#  enable_encoder: true
#  enable_user_dict: true
#  db_class: tabledb

kongmingma_part01_ii:
  dictionary: kongmingma_part01_ii
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part01_symbols:
  dictionary: kongmingma_part01_symbols
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part02:
  dictionary: kongmingma_part02
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part03:
  dictionary: kongmingma_part03
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part04:
  dictionary: kongmingma_part04
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false

kongmingma_part06:
  dictionary: kongmingma_part06
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false
  
kongmingma_part99:
  dictionary: kongmingma_part99
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false


















chord_composer:
  
  finish_chord_on_first_key_release: false
#  finish_chord_on_first_key_release: true #有一键被释放时立刻触发合成
#  finish_trigger_release_num: 3
  
  alphabet: qazwsxedcrfvtgb12345yhnujmik,ol.p;/67890'=`[ -\]
  
  algebra:
  
    #
    ##
    # 预处理
      #
      # 声明空格所用的按键和其易于表达的变换编码
#    - xlit| |中| # 中间的空格
    - xlit|'|一| # 左手空格
    - xlit|=|二| # 左手次空格
#    - xlit|`|三| # 左手三空格
#    - xlit|[|四| # 左手四空格
    - xlit| |壹| # 右手空格
    - xlit|-|贰| # 右手次空格
#    - xlit|\|叁| # 右手三空格
#    - xlit|]|肆| # 右手四空格
      # 这里启用了6个空格，理论上如果你还有空格可以再加，做空格的键不一样也可以直接改
      # 增加空格需要在前面的字母表那里（允许接受并击的按键列表）添加
    #
    
    #上面这部分可以放在外部配置，读取了再插入chord_composer
    
    
    
    
    
    # 符号和数字映射为大写字母，分离其转义干扰
    - xlit|;,./|ACXZ|
    
    # 将编码包装（用一对尖括号包裹起来）
      # 左手编码包装
    - xform/([qwertasdfgzxcvb12345]+)/<$1>/
      # 右手编码包装
    - xform/([yuiophjklAnmCXZ67890]+)/<$1>/
      # 空格区编码包装，并且完成无空格的时候补一个<无>标签
    - xform/^(.*)$/$1<无>/
    - xform/([一二三四五中壹贰叁肆伍]+)<无>/<$1>/
    #
    
    # 处理单手击的表示（添加下划线，表示另一手未击）  #允许存在单手配左中右空格，允许单手数字区表示
    - xform/^<([qwertasdfgzxcvb12345]+)><([无一二三四五中壹贰叁肆伍]*)>$/<$1>_<$2>/
      # xx => xx_
    - xform/^<([yuiophjklAnmCXZ67890]+)><([无一二三四五中壹贰叁肆伍]*)>$/_<$1><$2>/
      # yy => _yy
    #
    

    
    
    ##########################################
    ##
    # 主处理区（顺序可以随便排）
    
      # 大写字母部分指法映射(齐列)
#    - xform=(<qv>|<mp>|<qg>|<hp>|<sef>|<jil>)=Q=  # 可以写成这样
    - xform=(<qv>|<mp>)=Q=
    - xform=(<qg>|<hp>)=Q=
#    - xform=(<sef>|<jil>)=Q=
    - xform=(<wv>|<mo>)=W=
    - xform=(<ev>|<mi>)=E=
    - xform=(<et>|<yi>)=R=
    - xform=(<qt>|<yp>)=T=
    - xform=(<wg>|<ho>)=Y=
    - xform=(<wt>|<yo>|<ser>|<uil>)=U=
    - xform=(<eg>|<hi>|<wef>|<jio>)=I=
    - xform=(<aw>|<oA>)=O=
    - xform=(<qf>|<jp>)=P=
      #
    - xform=(<av>|<mA>)=A=
    - xform=(<sv>|<ml>)=S=
    - xform=(<dv>|<mk>)=D=
    - xform=(<sg>|<hl>)=F=
    - xform=(<dg>|<hk>)=G=
    - xform=(<ar>|<uA>)=H=
#    - xform=(<xf>|<jX>)=J=
    - xform=(<db>|<nk>)=J=
    - xform=(<dr>|<uk>)=K=
    - xform=(<wf>|<jo>)=L=
    - xform=(<as>|<lA>)=:=
      #
    - xform=(<zf>|<jZ>)=Z=
    - xform=(<xd>|<kX>)=X=
    - xform=(<xf>|<jX>)=X=
#    - xform=(<ac>|<CA>)=C=
    - xform=(<cf>|<jC>)=C=
    - xform=(<zs>|<lZ>)=V=
#    - xform=(<db>|<nk>)=V=
    - xform=(<qw>|<op>)=B=
    - xform=(<wd>|<ko>)=N=
    - xform=(<se>|<il>)=M=
    - xform=(<at>|<yA>)=<=
    - xform=(<ag>|<hA>)=>=
    - xform=(<zx>|<XZ>)=?=
    
      # 小写字母部分指法映射(齐列)
    - xform=(<q>|<p>)=q=
    - xform=(<w>|<o>)=w=
    - xform=(<e>|<i>)=e=
    - xform=(<r>|<u>)=r=
    - xform=(<t>|<y>)=t=
    - xform=(<ef>|<ji>)=y=
    - xform=(<er>|<ui>)=u=
    - xform=(<we>|<io>)=i=
    - xform=(<wr>|<uo>)=o=
    - xform=(<qr>|<up>)=p=
      #
    - xform=(<a>|<A>)=a=
    - xform=(<s>|<l>)=s=
    - xform=(<d>|<k>)=d=
    - xform=(<f>|<j>)=f=
    - xform=(<g>|<h>)=g=
    - xform=(<sr>|<ul>)=h=
    - xform=(<df>|<jk>)=j=
    - xform=(<sd>|<kl>)=k=
    - xform=(<sf>|<jl>)=l=
    - xform=(<af>|<jA>)=;=
      #
    - xform=(<z>|<Z>)=z=
    - xform=(<x>|<X>)=x=
    - xform=(<c>|<C>)=c=
    - xform=(<v>|<m>)=v=
    - xform=(<b>|<n>)=b=
    - xform=(<sc>|<Cl>)=n=
    - xform=(<cv>|<mC>)=m=
    - xform=(<xc>|<CX>)=,=
    - xform=(<xv>|<mX>)=.=
    - xform=(<zv>|<mZ>)=/=
    
      # 数字部分指法映射
    - xform=(<1>)=1=
    - xform=(<2>)=2=
    - xform=(<3>)=3=
    - xform=(<4>)=4=
    - xform=(<5>)=5=
    - xform=(<35>)=6=
    - xform=(<34>)=7=
    - xform=(<23>)=8=
    - xform=(<24>)=9=
    - xform=(<14>)=0=
    - xform=(<12>)=!=
      #
    - xform=(<6>)=6=
    - xform=(<7>)=7=
    - xform=(<8>)=8=
    - xform=(<9>)=9=
    - xform=(<0>)=0=
    - xform=(<68>)="=
    - xform=(<78>)=%=
    - xform=(<89>)=~=
    - xform=(<79>)=@=
    - xform=(<70>)=*=
    - xform=(<90>)=&=
    
    
    - xform=(<wer>)=8=
    - xform=(<sdf>)=7=
    - xform=(<asdf>)=0=
    - xform=(<xcv>)=9=
    
    - xform=(<uio>)=~=
    - xform=(<jkl>)=`=
    - xform=(<jkl;>)=@=
#    - xform=(<mCX>)=_=

#    - xform=(<rt>_)={Delete}{Release+Delete}=
#    - xform=(<rt>_)={BackSpace}{Release+BackSpace}=
#    - xform=(<rt>_)={Delete}=


    # 主映射区结束
    
    ####
    ##
    
    
    ########################################

    
    - xform/^UU(<无>)$/<1>/
    - xform/^II(<无>)$/<1>/
#    - xform=(<xf>|<jX>)=<壹>=
#    - xform/^uu(<无>)$/<2>/
#    - xform/^VV(<无>)$/<3>/
#    - xform/^<<(<无>)$/<2>/
#    - xform/^>>(<无>)$/<3>/
    - xform/^\?\?(<无>)$/<4>/
    - xform/^::(<无>)$/<5>/
    - xform/^&&(<无>)$/<6>/
    - xform=^//(<无>)$=//=
    - xform/^;;(<无>)$/;;/
      #
    - xform/^1i(<无>)$/<1>/
    - xform/^2i(<无>)$/<2>/
    - xform/^3i(<无>)$/<3>/
    - xform/^4i(<无>)$/<4>/

    
    #
      # 空格组合区
    - xform=(.)_<无>=$1_<"0>=
    - xform=_(.)<无>=_$1<"0>=
    - xform=(..)<无>=$1<"0>=
    - xform=^<无>==
    
    - xform|(.)_<一>|$1_<"1>|
    - xform|_(.)<一>|_$1<"1>|
    - xform|(..)<一>|$1<"1>|
    - xform|^<一>|<2>|
    
    - xform|(.)_<壹>|$1_<"1>|
    - xform|_(.)<壹>|_$1<"1>|
    - xform|(..)<壹>|$1<"1>|
    - xform|^<壹>|<1>|
    
#    - xform|(.)_<二>|$1_<"1>。|
#    - xform|_(.)<二>|_$1<"1>。|
#    - xform|(..)<二>|$1<"1>。|
    - xform|(.)_<二>|$1_<"0>。|
    - xform|_(.)<二>|_$1<"0>。|
    - xform|(..)<二>|$1<"0>。|
    - xform|^<二>|<4>|
    
#    - xform|(.)_<贰>|$1_<"1>，|
#    - xform|_(.)<贰>|_$1<"1>，|
#    - xform|(..)<贰>|$1<"1>，|
    - xform|(.)_<贰>|$1_<"0>，|
    - xform|_(.)<贰>|_$1<"0>，|
    - xform|(..)<贰>|$1<"0>，|
    - xform|^<贰>|<3>|
    
#    - xform|(.)_<一壹>|$1_<"1>；|
#    - xform|_(.)<一壹>|_$1<"1>；|
#    - xform|(..)<一壹>|$1<"1>；|
    - xform|(.)_<一壹>|$1_<"0>；|
    - xform|_(.)<一壹>|_$1<"0>；|
    - xform|(..)<一壹>|$1<"0>；|
    - xform|^<一壹>|<2>|
    
    - xform|(..)<二贰>|$1<"1>、|
    - xform|^<二贰>|<5>|
    
    - xform|(._)<一二>|$1<"1>。|
    - xform|(._)<一贰>|$1<"1>，|
    - xform|(_.)<壹贰>|$1<"1>，|
    # 注意这个 “二壹” 的顺序，因为是左手在前右手在后
    - xform|(_.)<二壹>|$1<"1>。|
    - xform|(..)<一二>|$1<"2>。|
    - xform|(..)<壹贰>|$1<"2>，|
    
    ##########
    #主处理区可以写在chord_composer里让用户自行处理
    
    
    #

    
    #
    
    
    #
    ##
    # 后处理
    #
    #
    ##
    
    # 并击合成后处理
    - xform/<"0>//
    - xform/<"1>/ /
    - xform/<"2>/'/
    - xform/<"3>/-/
    - xform/<"4>/=/
    - xform/<"5>/`/
    - xform=<"6>=\=
    
    - xform/<0>//
    - xform/<1>/ /
    - xform/<2>/{KP_2}/
    - xform/<3>/{KP_3}/
    - xform/<4>/{KP_4}/
    - xform/<5>/{KP_5}/
    - xform/<6>/{KP_6}/
    
#    - xform/<0>/0/
#    - xform/<1>/1/
#    - xform/<2>/2/
#    - xform/<3>/3/
#    - xform/<4>/4/
#    - xform/<5>/5/
#    - xform/<6>/6/

#    - xform/<"0>/0/
#    - xform/<"1>/1/
#    - xform/<"2>/2/
#    - xform/<"3>/3/
#    - xform/<"4>/4/
#    - xform/<"5>/5/
#    - xform/<"6>/6/
    
#    - xform/<"1>/"/
#    - xform/<"2>/""/
#    - xform/<"3>/"""/
    
#    - xform/_(`|~|\*|&|@|'|")/$1_/
    - xform/^([0-9])([0-9])$/$1__$2/
    - xform/<无>//
    - xform/.*<.+>.*// #不要用erase，太奇怪了……
      # 屏蔽未定义的指法
    
    
    
#    - xform/(.+)/<$1>/
#    - xform/<(.+)>/$1/
    
#    - xform/ /{space}{Release+space}/
#    - xform/ /  /
#    - xform/a_/a/
    
  
    
  output_format:
    #输出后处理
    # - xform/[0-9]//
    - xform=，=__,=
    - xform=。=__.=
    - xform=、=__/=
    - xform=；=__;=
    - xform=！=__!=
    - xform=？=__?=
    
#    - xform/(.+)/<$1>/
#    - xform/<(.+)>/$1/
    
  prompt_format:
    # 并击合成过程中指法提示
#    - xlit/>/!/
#    - xform/[0-9]//
    - xform/ /_/
    
#    - xform/(.+)/<$1>/
#    - xform/<(.+)>/$1/
  
#  extras:
#    xxx_tag:
#      prompt_format:
#        - xform/(.+)/<$1>/
#        - xform/<(.+)>/$1/
#      output_format:
#        - xform/(.+)/<$1>/
#        - xform/<(.+)>/$1/








key_binder:
  bindings:
#    - { accept: bracketleft, send: Page_Up, when: paging } # [上翻页
#    - { accept: bracketleft, send: Page_Up, when: has_menu }
#    - { accept: bracketright, send: Page_Down, when: has_menu } # ]下翻页
    - { when: composing, accept: BackSpace, send: Escape }
#    - { when: composing, accept: Tab, send: Escape }
    - { when: composing, accept: Delete, send: BackSpace }
#    - { when: always, accept: Delete, send: BackSpace }
#    - { when: composing, accept: Escape, send: BackSpace }
#    - { when: composing, accept: Return, send: space }
#    - { when: composing, accept: apostrophe, send: quotedbl }
#    - { accept: apostrophe, send: KP_2, when: composing }
#    - { accept: bar, send: KP_2, when: composing }
#    - { accept: bar, send: space, when: always }
#    - { accept: quotedbl, send: space, when: always }
#    - { accept: apostrophe, send: space, when: always }
#    - { accept: apostrophe, send: space, when: composing }
    ########
#    - { when: composing, accept: space, send: KP_1 }
#    - { when: composing, accept: apostrophe, send: KP_2 }
#    - { when: composing, accept: equal, send: KP_3 }
#    - { when: composing, accept: minus, send: KP_4 }
#    - { when: composing, accept: grave, send: KP_5 }
#    - { when: composing, accept: backslash, send: KP_6 }
    ##########
#    - { when: composing, accept: Shift+Shift_L, send: 2 }
#    - { when: composing, accept: Shift+Shift_R, send: 3 }
#    - {accept: Tab, send: Right, when: composing}
#    - {accept: "Shift+Tab", send: Left, when: composing}
# has_menu = 有候选栏项的时候，没候选项只有输入框的时候就是composing


# 用Shift切换中英文
ascii_composer:
  good_old_caps_lock: false
  switch_key:
    Shift_L: commit_code
    Shift_R: commit_code
#    Caps_Lock: clear


#为了不要天天在日志里警告缺失标点处理器勉为其难补一个
punctuator:
  full_shape:
    "" : { commit: "" }
  half_shape:
    "" : { commit: "" }


#要写在.custom.yaml文件里
#__patch:
#  - patch/+:
#      __include: grammar:/huayu #语言模型



# 不要使用这个pack的功能，这个pack模式可以(将会)对packs的部分不编译出棱镜文件.prism和反查词典.reverse.bin文件
#translator:
#  dictionary: kongmingma_user
#  packs:
#    - kongmingma_user
#    - kongmingma_part00
#    - kongmingma_part01_char
#    - kongmingma_part01_ii
#    - kongmingma_part01_symbols
#    - kongmingma_part02
#    - kongmingma_part03
#    - kongmingma_part04
#    - kongmingma_part06
#    - kongmingma_part99